{"version":3,"sources":["Icon.js","SingleSelect.js","Favorites.js","Searched.js","App.js","serviceWorker.js","index.js"],"names":["Icon","props","react_default","a","createElement","onClick","star_default","style","verticalAlign","color","DivStyles","display","flexDirection","alignItems","width","marginBottom","LeftStyles","marginRight","RightStyles","marginTop","SingleSelect","key","index","src_Icon","favorite","item","title","id","convert","renderHTML","body","Favourites","console","log","fav","this","selectedF","_this","FavStyles","marginLeft","Object","keys","map","src_SingleSelect","Component","backgroundColor","position","bottom","Searched","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","selectedFav","state","hash","Hash","temp","setState","filter","value","searchTerm","searching","selected","handleChange","bind","assertThisInitialized","handleSubmit","fetchData","event","e","target","preventDefault","_this2","fetch","then","response","json","catch","error","_this$state","className","onSubmit","onChange","type","search_default","size","SearchStyles","keywords","toLowerCase","includes","hasOwnProperty","Favorites","margin","App","src_Searched","searchedTerm","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cda8051a.chunk.js","sourcesContent":["import React from \"react\";\nimport FaStar from \"react-icons/lib/fa/star\";\n\nconst Icon = props => {\n  return (\n    <span onClick={props.onClick}>\n      <FaStar style={{ verticalAlign: \"top\" }} color={props.color} />\n    </span>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport Icon from \"./Icon\";\nimport convert from \"htmr\";\nimport renderHTML from \"react-render-html\";\n\nconst SingleSelect = props => {\n  return (\n    <div key={props.index} style={DivStyles}>\n      <div style={LeftStyles}>\n        <Icon color={props.color} onClick={() => props.favorite(props.item)} />{\" \"}\n        {props.item.title}{\" \"}\n      </div>\n      <div style={RightStyles} id=\"html\">\n        {convert(renderHTML(props.item.body))}\n      </div>\n    </div>\n  );\n};\n\nconst DivStyles = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  alignItems: \"flex-start\",\n  width: \"100%\",\n  marginBottom: \"1em\"\n};\nconst LeftStyles = {\n  width: \"30%\",\n  marginRight: \"10%\"\n  //marginTop: \"1em\"\n};\nconst RightStyles = {\n  width: \"60%\",\n  marginTop: \"-1em\"\n};\n\nexport default SingleSelect;\n","import React, { Component } from \"react\";\nimport SingleSelect from \"./SingleSelect\";\n\nclass Favourites extends Component {\n  componentWillMount() {\n    console.log({ fav: this.props.selectedF });\n  }\n  componentWillReceiveProps() {}\n  render() {\n    return (\n      <div style={FavStyles}>\n        <h2 style={{ color: \"#14AF74\", marginLeft: \"13px\" }}>Favourites</h2>\n        <div>\n          {this.props.selectedF &&\n            Object.keys(this.props.selectedF).map((item, index) => {\n              return (\n                <SingleSelect\n                  index={index}\n                  key={index}\n                  color={\"green\"}\n                  item={this.props.selectedF[item]}\n                  favorite={this.props.favorite}\n                />\n              );\n            })}\n        </div>\n      </div>\n    );\n  }\n}\nconst FavStyles = {\n  backgroundColor: \"#F5FFFA\",\n  position: \"fixed\",\n  width: \"100%\",\n  bottom: \"0\"\n};\n\nexport default Favourites;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport FaSearch from \"react-icons/lib/fa/search\";\nimport Hash from \"object-hash\";\nimport Favourites from \"./Favorites\";\nimport SingleSelect from \"./SingleSelect\";\n\nclass Searched extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searching: [],\n      value: \"\",\n      searchTerm: \"\",\n      color: \"gray\",\n      selected: false,\n      selectedFav: {}\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    //this.favorite = this.favorite.bind(this);\n  }\n\n  contains;\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  async handleChange(event) {\n    const e = event.target.value;\n\n    if (!e) {\n      this.setState({ value: e, searchTerm: e, display: false });\n    } else {\n      this.setState({ value: e, display: true });\n    }\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  fetchData() {\n    fetch(\n      \"https://secure.toronto.ca/cc_sr_v1/data/swm_waste_wizard_APR?limit=1000\"\n    )\n      .then(response => response.json())\n      .then(response => {\n        this.setState({ searching: response });\n      })\n\n      .catch(error => {\n        console.error(error);\n      });\n  }\n  favorite = item => {\n    const { selectedFav } = this.state;\n    const hash = Hash(item);\n    if (selectedFav[hash]) {\n      const temp = selectedFav;\n      delete temp[hash];\n      this.setState({ selectedFav: temp });\n    } else {\n      const temp = selectedFav;\n      temp[hash] = item;\n      this.setState({ selectedFav: temp });\n    }\n  };\n  filter = () => {\n    const { value } = this.state;\n    this.setState({ searchTerm: value });\n  };\n\n  render() {\n    const { searching, searchTerm, selectedFav } = this.state;\n\n    const { favorite } = this;\n    return (\n      <div>\n        <form className=\"searching\" onSubmit={this.handleSubmit}>\n          <input\n            className=\"seachBar\"\n            value={this.state.value}\n            onChange={this.handleChange}\n          />\n          <button className=\"buttonB\" type=\"submit\" onClick={this.filter}>\n            <FaSearch size={25} />\n          </button>\n        </form>\n\n        <div style={SearchStyles}>\n          <div>\n            {searchTerm &&\n              searching\n                .filter(item =>\n                  item.keywords.toLowerCase().includes(searchTerm.toLowerCase())\n                )\n                .map((item, index) => {\n                  const hash = Hash(item);\n                  return (\n                    <SingleSelect\n                      index={index}\n                      key={index}\n                      color={\n                        selectedFav.hasOwnProperty(hash) ? \"green\" : \"gray\"\n                      }\n                      item={item}\n                      favorite={favorite}\n                    />\n                  );\n                })}\n          </div>\n        </div>\n        <Favourites selectedF={selectedFav} favorite={favorite} />\n      </div>\n    );\n  }\n}\nconst SearchStyles = {\n  margin: \"13px\",\n  display: \"flex\"\n};\n\nexport default Searched;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Searched from \"./Searched.js\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"header\">\n          <h3>Toronto Waste Lookup</h3>\n        </div>\n\n        <Searched searchedTerm />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nserviceWorker.unregister();\n"],"sourceRoot":""}